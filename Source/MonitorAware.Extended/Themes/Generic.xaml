<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:views="clr-namespace:MonitorAware.Extended.Views"
					xmlns:controls="clr-namespace:MonitorAware.Extended.Views.Controls"
					xmlns:converters="clr-namespace:MonitorAware.Extended.Views.Converters">
	<ResourceDictionary.MergedDictionaries>
		<!-- Loading default theme is necessary to dynamically change caption buttons' colors. -->
		<ResourceDictionary Source="/MonitorAware.Extended;component/Views/Themes/DefaultTheme.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterKey"/>
	<converters:DoubleSumConverter x:Key="DoubleSumConverterKey"/>
	<converters:DoubleMultiplyConverter x:Key="DoubleMultiplyConverterKey"/>
	<converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverterKey"/>

	<!--=====================
	For ExtendedCaptionButton
	======================-->
	<RectangleGeometry x:Key="ExtendedCaptionButton.MinimizeGeometry"
					   Rect="4,10 8,2"/>

	<GeometryGroup x:Key="ExtendedCaptionButton.MaximizeGeometry"
				   FillRule="EvenOdd">
		<RectangleGeometry Rect="3,4 10,8"/>
		<RectangleGeometry Rect="4,6 8,5"/>
	</GeometryGroup>

	<GeometryGroup x:Key="ExtendedCaptionButton.RestoreGeometry"
				   FillRule="EvenOdd">
		<PathGeometry Figures="M 3,6 H 6 V 3 H 13 V 10 H 10 V 13 H 3 Z"/>
		<PathGeometry Figures="M 7,5 H 12 V 9 H 10 V 6 H 7 Z"/>
		<PathGeometry Figures="M 4,8 H 9 V 12 H 4 Z"/>
	</GeometryGroup>

	<CombinedGeometry x:Key="ExtendedCaptionButton.CloseGeometry"
					  GeometryCombineMode="Intersect">
		<CombinedGeometry.Geometry1>
			<GeometryGroup FillRule="Nonzero">
				<RectangleGeometry Rect="0,7.3 16,1.4">
					<RectangleGeometry.Transform>
						<RotateTransform Angle="45" CenterX="8" CenterY="8"/>
					</RectangleGeometry.Transform>
				</RectangleGeometry>
				<RectangleGeometry Rect="0,7.3 16,1.4">
					<RectangleGeometry.Transform>
						<RotateTransform Angle="-45" CenterX="8" CenterY="8"/>
					</RectangleGeometry.Transform>
				</RectangleGeometry>
			</GeometryGroup>
		</CombinedGeometry.Geometry1>
		<CombinedGeometry.Geometry2>
			<RectangleGeometry Rect="0,4 16,8"/>
		</CombinedGeometry.Geometry2>
	</CombinedGeometry>

	<controls:DrawingMaximizeIcon x:Key="DrawingMaximizeIconKey"/>
	<controls:DrawingRestoreIcon x:Key="DrawingRestoreIconKey"/>

	<ControlTemplate x:Key="ExtendedCaptionButton.StateTemplate" TargetType="{x:Type controls:ExtendedCaptionButton}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				Opacity="1"
				UseLayoutRounding="True"
				SnapsToDevicePixels="True">
			<Path x:Name="icon"
				  Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
				  Focusable="False"
				  Data="{TemplateBinding IconGeometry}"
				  Fill="{DynamicResource ExtendedCaptionButton.State.Normal.Foreground}"
				  RenderOptions.EdgeMode="Aliased"
				  SnapsToDevicePixels="True"/>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.MouseOver.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.MouseOver.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.Pressed.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.Pressed.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Opacity)"
								Duration="0"
								To="0.42"/>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Border>
	</ControlTemplate>

	<ControlTemplate x:Key="ExtendedCaptionButton.MaximizeTemplate" TargetType="{x:Type controls:ExtendedCaptionButton}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				Opacity="1"
				UseLayoutRounding="True"
				SnapsToDevicePixels="True">
			<controls:IconCanvas x:Name="icon"
								 Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
								 Focusable="False"
								 Foreground="{DynamicResource ExtendedCaptionButton.State.Normal.Foreground}"
								 AncestorTransform="{Binding ElementName=PART_ChromeGrid, Path=LayoutTransform}"
								 DrawingIcon="{TemplateBinding DrawingIcon}"
								 RenderOptions.EdgeMode="Aliased"
								 SnapsToDevicePixels="True"/>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.MouseOver.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(controls:IconCanvas.Foreground).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.MouseOver.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.Pressed.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(controls:IconCanvas.Foreground).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.State.Pressed.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Opacity)"
								Duration="0"
								To="0.42"/>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Border>
	</ControlTemplate>

	<ControlTemplate x:Key="ExtendedCaptionButton.CloseTemplate" TargetType="{x:Type controls:ExtendedCaptionButton}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				Opacity="1"
				UseLayoutRounding="True"
				SnapsToDevicePixels="True">
			<Path x:Name="icon"
				  Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center"
				  Focusable="False"
				  Data="{StaticResource ExtendedCaptionButton.CloseGeometry}"
				  Fill="{DynamicResource ExtendedCaptionButton.Close.Normal.Foreground}"
				  SnapsToDevicePixels="True"/>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.Close.MouseOver.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.Close.MouseOver.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<ColorAnimation
								Storyboard.TargetName="border"
								Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.Close.Pressed.BackgroundColor}"/>
							<ColorAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
								Duration="0:0:0.1"
								To="{DynamicResource ExtendedCaptionButton.Close.Pressed.ForegroundColor}"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="icon"
								Storyboard.TargetProperty="(Path.Opacity)"
								Duration="0"
								To="0.42"/>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Border>
	</ControlTemplate>

	<Style x:Key="ExtendedCaptionButton.BaseStyle" TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
	</Style>

	<Style x:Key="ExtendedCaptionButton.StateStyle"
		   TargetType="{x:Type controls:ExtendedCaptionButton}"
		   BasedOn="{StaticResource ExtendedCaptionButton.BaseStyle}">
		<Setter Property="NormalBackground" Value="{DynamicResource ExtendedCaptionButton.State.Normal.Background}"/>
		<Setter Property="DeactivatedBackground" Value="{DynamicResource ExtendedCaptionButton.State.Deactivated.Background}"/>
	</Style>

	<Style x:Key="ExtendedCaptionButton.MinimizeStyle"
		   TargetType="{x:Type controls:ExtendedCaptionButton}"
		   BasedOn="{StaticResource ExtendedCaptionButton.StateStyle}">
		<Setter Property="Template" Value="{StaticResource ExtendedCaptionButton.StateTemplate}"/>
		<Setter Property="IconGeometry" Value="{StaticResource ExtendedCaptionButton.MinimizeGeometry}"/>
		<Setter Property="Width" Value="{DynamicResource ExtendedCaptionButton.Minimize.Width}"/>
		<Setter Property="Height" Value="{DynamicResource ExtendedCaptionButton.Height}"/>
		<Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ExtendedWindow}}, Path=IsMinimizeVisible, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
		<Setter Property="Command" Value="SystemCommands.MinimizeWindowCommand"/>
	</Style>

	<Style x:Key="ExtendedCaptionButton.MaximizeStyle"
		   TargetType="{x:Type controls:ExtendedCaptionButton}"
		   BasedOn="{StaticResource ExtendedCaptionButton.StateStyle}">
		<Setter Property="Template" Value="{StaticResource ExtendedCaptionButton.MaximizeTemplate}"/>
		<Setter Property="DrawingIcon" Value="{StaticResource DrawingMaximizeIconKey}"/>
		<Setter Property="Width" Value="{DynamicResource ExtendedCaptionButton.Maximize.Width}"/>
		<Setter Property="Height" Value="{DynamicResource ExtendedCaptionButton.Height}"/>
		<Setter Property="Margin" Value="{DynamicResource ExtendedCaptionButton.Maximize.Margin}"/>
		<Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ExtendedWindow}}, Path=IsMaximizeVisible, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
		<Setter Property="Command" Value="SystemCommands.MaximizeWindowCommand"/>
	</Style>

	<Style x:Key="ExtendedCaptionButton.RestoreStyle"
		   TargetType="{x:Type controls:ExtendedCaptionButton}"
		   BasedOn="{StaticResource ExtendedCaptionButton.StateStyle}">
		<Setter Property="Template" Value="{StaticResource ExtendedCaptionButton.MaximizeTemplate}"/>
		<Setter Property="DrawingIcon" Value="{StaticResource DrawingRestoreIconKey}"/>
		<Setter Property="Width" Value="{DynamicResource ExtendedCaptionButton.Maximize.Width}"/>
		<Setter Property="Height" Value="{DynamicResource ExtendedCaptionButton.Height}"/>
		<Setter Property="Margin" Value="{DynamicResource ExtendedCaptionButton.Maximize.Margin}"/>
		<Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ExtendedWindow}}, Path=IsRestoreVisible, Converter={StaticResource BooleanToVisibilityConverterKey}}"/>
		<Setter Property="Command" Value="SystemCommands.RestoreWindowCommand"/>
	</Style>

	<Style x:Key="ExtendedCaptionButton.CloseStyle"
		   TargetType="{x:Type controls:ExtendedCaptionButton}"
		   BasedOn="{StaticResource ExtendedCaptionButton.BaseStyle}">
		<Setter Property="NormalBackground" Value="{DynamicResource ExtendedCaptionButton.Close.Normal.Background}"/>
		<Setter Property="DeactivatedBackground" Value="{DynamicResource ExtendedCaptionButton.Close.Deactivated.Background}"/>
		<Setter Property="Template" Value="{StaticResource ExtendedCaptionButton.CloseTemplate}"/>
		<Setter Property="Width" Value="{DynamicResource ExtendedCaptionButton.Close.Width}"/>
		<Setter Property="Height" Value="{DynamicResource ExtendedCaptionButton.Height}"/>
		<Setter Property="Command" Value="SystemCommands.CloseWindowCommand"/>
	</Style>

	<!--==============
	For ExtendedWindow
	===============-->
	<Style TargetType="{x:Type views:ExtendedWindow}">
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
							  GlassFrameThickness="0"
							  CornerRadius="0"/>
			</Setter.Value>
		</Setter>

		<Setter Property="KeepsTitleContentMargin" Value="{DynamicResource ExtendedWindow.KeepsTitleContentMargin}"/>
		<Setter Property="BlendsCaptionButtonVisualStyle" Value="{DynamicResource ExtendedWindiw.BlendsCaptionButtonVisualStyle}"/>
		<Setter Property="UsesDefaultChromeBackground" Value="{DynamicResource ExtendedWindow.UsesDefaultChromeBackground}"/>
		<Setter Property="ChromeBackground" Value="{DynamicResource ExtendedWindow.Chrome.Background}"/>
		<Setter Property="ChromeForeground" Value="{DynamicResource ExtendedWindow.Chrome.Foreground}"/>
		<Setter Property="ChromeDeactivatedBackground" Value="{DynamicResource ExtendedWindow.Chrome.DeactivatedBackground}"/>
		<Setter Property="ChromeDeactivatedForeground" Value="{DynamicResource ExtendedWindow.Chrome.DeactivatedForeground}"/>
		<Setter Property="ChromeBorderThickness" Value="{DynamicResource ExtendedWindow.Chrome.BorderThickness}"/>
		<Setter Property="ChromeBorderBrush" Value="{DynamicResource ExtendedWindow.Chrome.BorderBrush}"/>
		<Setter Property="TitleBarBackground" Value="{DynamicResource ExtendedWindow.TitleBar.Background}"/>
		<Setter Property="TitleBarNormalHeight" Value="{DynamicResource ExtendedWindow.TitleBar.Normal.Height}"/>
		<Setter Property="TitleBarMaximizedHeight" Value="{DynamicResource ExtendedWindow.TitleBar.Maximized.Height}"/>
		<Setter Property="TitleBarPaddingRight" Value="{DynamicResource ExtendedWindow.TitleBar.Padding.Right}"/>
		<Setter Property="ContentMargin" Value="{DynamicResource ExtendedWindow.Content.Margin}"/>
		<Setter Property="ContentBorderThickness" Value="{DynamicResource ExtendedWindow.Content.BorderThickness}"/>
		<Setter Property="ContentBorderBrush" Value="{DynamicResource ExtendedWindow.Content.BorderBrush}"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type views:ExtendedWindow}">
					<Border x:Name="PART_ChromeOutmostBorder">
						<Grid x:Name="PART_ChromeGrid"
							  Background="{TemplateBinding Background}">
							<Grid x:Name="PART_TitleBarBackGrid"
								  VerticalAlignment="Top"
								  Background="{TemplateBinding TitleBarBackground}"
								  Grid.ZIndex ="-1">
								<Grid.Height>
									<MultiBinding Converter="{StaticResource DoubleSumConverterKey}">
										<Binding ElementName="PART_ChromeBorder" Path="BorderThickness.Top"/>
										<Binding ElementName="PART_TitleBarGrid" Path="Height"/>
									</MultiBinding>
								</Grid.Height>
							</Grid>

							<Border x:Name="PART_ChromeBorder"
									BorderThickness="{TemplateBinding ChromeBorderThickness}"
									BorderBrush="{TemplateBinding ChromeBorderBrush}">
								<Grid x:Name="PART_ChromeContentGrid">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto"/>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>

									<Grid Grid.Row="0"
										  x:Name="PART_TitleBarGrid"
										  Height="{x:Static SystemParameters.CaptionHeight}"
										  Background="Transparent">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Grid Grid.Column="0"
											  Width="{TemplateBinding TitleBarPaddingLeft}"/>

										<!-- Title bar Icon -->
										<Grid Grid.Column="1"
											  Width="{Binding ElementName=PART_TitleBarIcon, Path=Width, Converter={StaticResource DoubleMultiplyConverterKey}, ConverterParameter=1.5}"
											  Height="{Binding ElementName=PART_TitleBarGrid, Path=Height}"
											  Visibility="{Binding ElementName=PART_TitleBarIcon, Path=Visibility}">

											<Image x:Name="PART_TitleBarIcon"
												   Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconSize.Width}"
												   Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconSize.Height}"
												   HorizontalAlignment="Left" VerticalAlignment="Top"
												   Source="{TemplateBinding Icon}"
												   Visibility="{TemplateBinding Icon, Converter={StaticResource ObjectToVisibilityConverterKey}}"
												   WindowChrome.IsHitTestVisibleInChrome="True">
												<controls:FrameworkElementCenterProperty.AttachedProperty>
													<controls:FrameworkElementCenterProperty IsVerticalAlignmentCenter="True"
																							 Rounding="Ceiling"/>
												</controls:FrameworkElementCenterProperty.AttachedProperty>
											</Image>
										</Grid>

										<!-- Title bar text -->
										<TextBlock Grid.Column="2"
												   HorizontalAlignment="{TemplateBinding TitleAlignment}"
												   VerticalAlignment="Center"
												   Foreground="{TemplateBinding Foreground}"
												   FontSize="{TemplateBinding TitleFontSize}"
												   Text="{TemplateBinding Title}"/>

										<!-- Option -->
										<Grid Grid.Column="3"
											  x:Name="PART_TitleBarOptionGrid"
											  WindowChrome.IsHitTestVisibleInChrome="True"/>

										<!-- Caption buttons -->
										<StackPanel Grid.Column="4"
													x:Name="PART_TitleBarCaptionButtonsPanel"
													HorizontalAlignment="Right" VerticalAlignment="Top"
													Orientation="Horizontal">
											<controls:ExtendedCaptionButton Style="{StaticResource ExtendedCaptionButton.MinimizeStyle}"/>
											<controls:ExtendedCaptionButton	Style="{StaticResource ExtendedCaptionButton.MaximizeStyle}"/>
											<controls:ExtendedCaptionButton	Style="{StaticResource ExtendedCaptionButton.RestoreStyle}"/>
											<controls:ExtendedCaptionButton Style="{StaticResource ExtendedCaptionButton.CloseStyle}"/>
										</StackPanel>

										<Grid Grid.Column="5"
											  Width="{TemplateBinding TitleBarPaddingRight}"/>
									</Grid>

									<Border Grid.Row="1"
											x:Name="PART_WindowContentBorder"
											Margin="{TemplateBinding ContentMargin}"
											BorderThickness="{TemplateBinding ContentBorderThickness}"
											BorderBrush="{TemplateBinding ContentBorderBrush}">
										<AdornerDecorator>
											<ContentPresenter Content="{TemplateBinding Content}"/>
										</AdornerDecorator>
									</Border>
								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>